<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Learning extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model(['Learning_model','Exam_model','Module_model','Topic_model']);
    } 

    /*
     * Listing of learning
     */
    function index()
    {
        $data['learning'] = $this->Learning_model->get_all_learning();
        
        $data['_view'] = 'learning/index';
        $this->load->view('layouts/main',$data);
    }

    function get_learning_of_module($id_module){

        $data['lessons'] = $this->Learning_model->get_learning_module($id_module);
        $data['exams'] = $this->Exam_model->get_all_examen_of_module($id_module);
        $data['module'] = $this->Module_model->get_module_name($id_module);
        $this->load->view('header_footer/header_admin');
        $this->load->view('learning/learning_module',$data);
        $this->load->view('header_footer/footer_admin');
    }
    /*
     * Adding a new learning
     */
    function add($moduleID)
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'learningTopic' => $this->input->post('learningTopic'),
				'moduleID' => $this->input->post('moduleID'),
				'time_stamp' => $this->input->post('time_stamp'),
				'deleteStatus' => $this->input->post('deleteStatus'),
				'learningName' => $this->input->post('learningName'),
				'comment' => $this->input->post('comment'),
				'link' => $this->input->post('link'),
            );
            
            $learning_id = $this->Learning_model->add_learning($params);
            redirect("learning/get_learning_of_module/$moduleID");
        }
        else
        {            
            //$data['_view'] = 'learning/add';
            //$this->load->view('layouts/main',$data);

            $data['moduleid'] = $moduleID;
            $data['topics'] = $this->Topic_model->get_all_topics_by_module($moduleID);
            $this->load->view('header_footer/header_admin');
            $this->load->view('learning/add',$data);
            $this->load->view('header_footer/footer_admin');
        }
    }  

    /*
     * Editing a learning
     */
    function edit($learningID)
    {   
        // check if the learning exists before trying to edit it
        $data['learning'] = $this->Learning_model->get_learning($learningID);
        
        if(isset($data['learning']['learningID']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'learningTopic' => $this->input->post('learningTopic'),
					'moduleID' => $this->input->post('moduleID'),
					'time_stamp' => $this->input->post('time_stamp'),
					'deleteStatus' => $this->input->post('deleteStatus'),
					'learningName' => $this->input->post('learningName'),
					'comment' => $this->input->post('comment'),
					'link' => $this->input->post('link'),
                );

                $this->Learning_model->update_learning($learningID,$params);            
                redirect('learning/index');
            }
            else
            {
                $data['_view'] = 'learning/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The learning you are trying to edit does not exist.');
    } 

    /*
     * Deleting learning
     */
    function remove($learningID)
    {
        $learning = $this->Learning_model->get_learning($learningID);

        // check if the learning exists before trying to delete it
        if(isset($learning['learningID']))
        {
            $this->Learning_model->delete_learning($learningID);
            redirect('learning/index');
        }
        else
            show_error('The learning you are trying to delete does not exist.');
    }

    function viewDetails($learningID)
    {
        $learning = $this->Learning_model->get_learning($learningID);

        // check if the learning exists before trying to delete it
        if(isset($learning['learningID']))
        {
            $data['learning'] = $learning;
            $data['topic'] = $this->Topic_model->get_topic($data['learning']['learningTopic']);
            $this->load->view('header_footer/header_admin');
            $this->load->view('course/course_details',$data);
            $this->load->view('header_footer/footer_admin');
        }
        else
            show_error('The learning you are trying to delete does not exist.');
    }
    
}
