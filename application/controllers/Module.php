<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Module extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model(['Module_model','Course_model','Moduleassign_model','Notification_model']);
    } 

    /*
     * Listing of modules
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('module/index?');
        $config['total_rows'] = $this->Module_model->get_all_modules_count();
        $this->pagination->initialize($config);

        $data['modules'] = $this->Module_model->get_all_modules();

        $this->load->view('header_footer/header_admin');
        $this->load->view('module/index',$data);
        $this->load->view('header_footer/footer_admin');
    }


    function get_module_of_course_student($id_course){

        $data['modules'] = $this->Module_model->get_module_course($id_course);
        $this->load->view('header_footer/header_admin');
        $this->load->view('student/module_course',$data);
        $this->load->view('header_footer/footer_admin');
    }

    /*
     * Adding a new module
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'modulePeriod' => $this->input->post('modulePeriod'),
				'modulePrerequisites' => $this->input->post('modulePrerequisites'),
				'moduleEligible' => $this->input->post('moduleEligible'),
				'modulePrice' => $this->input->post('modulePrice'),
				'moduleCode' => $this->input->post('moduleCode'),
				'moduleDate' => $this->input->post('moduleDate'),
				'moduleID' => $this->input->post('moduleID'),
				'moduleName' => $this->input->post('moduleName'),
				'moduleType' => $this->input->post('moduleType'),
				'moduleCourseID' => $this->input->post('moduleCourseID'),
				'moduleLevel' => $this->input->post('moduleLevel'),
				'moduleCredit' => $this->input->post('moduleCredit'),
				'moduleDuration' => $this->input->post('moduleDuration'),
				'moduleOverview' => $this->input->post('moduleOverview'),
            );
            
            $module_id = $this->Module_model->add_module($params);
            redirect('module/index');
        }
        else
        {            
            $data['courses'] = $this->Course_model->get_all_courses();
            $this->load->view('header_footer/header_admin');
            $this->load->view('module/add',$data);
            $this->load->view('header_footer/footer_admin');
        }
    }  

    /*
     * Editing a module
     */
    function edit($id)
    {   
        // check if the module exists before trying to edit it
        $data['module'] = $this->Module_model->get_module($id);

        
        if(isset($data['module']['moduleID']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'modulePeriod' => $this->input->post('modulePeriod'),
					'modulePrerequisites' => $this->input->post('modulePrerequisites'),
					'moduleEligible' => $this->input->post('moduleEligible'),
					'modulePrice' => $this->input->post('modulePrice'),
					'moduleCode' => $this->input->post('moduleCode'),
					'moduleFile' => $this->input->post('moduleFile'),
					'moduleDate' => $this->input->post('moduleDate'),
					'moduleID' => $this->input->post('moduleID'),
					'moduleName' => $this->input->post('moduleName'),
					'moduleType' => $this->input->post('moduleType'),
					'moduleCourseID' => $this->input->post('moduleCourseID'),
					'moduleLevel' => $this->input->post('moduleLevel'),
					'moduleCredit' => $this->input->post('moduleCredit'),
					'moduleDuration' => $this->input->post('moduleDuration'),
					'moduleOverview' => $this->input->post('moduleOverview'),
                );

                $this->Module_model->update_module($id,$params);            
                redirect('module/index');
            }
            else {
                $this->load->view("header_footer/header_admin");
                $this->load->view('module/edit', $data);
                $this->load->view('header_footer/footer_admin');
            }
        }
        else
            show_error('The module you are trying to edit does not exist.');
    } 

    /*
     * Deleting module
     */
    function remove($id)
    {
        $module = $this->Module_model->get_module($id);

        // check if the module exists before trying to delete it
        if(isset($module['moduleID']))
        {
            $this->Module_model->delete_module($id);
            redirect('module/index');
        }
        else
            show_error('The module you are trying to delete does not exist.');
    }

}
