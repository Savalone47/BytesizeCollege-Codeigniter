<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Assignedcourse extends CI_Controller {
    function __construct()
    {
        parent::__construct();
        $this->load->model(['Assignedcourse_model','Notification_model']);
    } 

    /*
     * Listing of assignedcourses
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('assignedcourse/index?');
        $config['total_rows'] = $this->Assignedcourse_model->get_all_assignedcourses_count();
        $this->pagination->initialize($config);

        $data['assignedcourses'] = $this->Assignedcourse_model->get_all_assignedcourses($params);
        
        $data['_view'] = 'assignedcourse/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new assignedcourse
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'courseID' => $this->input->post('courseID'),
				'studentID' => $this->input->post('studentID'),
				'timestamp' => date('Y-m-d'),
            );
            
            $assignedcourse_id = $this->Assignedcourse_model->add_assignedcourse($params);
            redirect('assignedcourse/index');
        }
        else
        {
			$this->load->model('Course_model');
			$data['all_courses'] = $this->Course_model->get_all_courses();

			$this->load->model('Student_model');
			$data['all_students'] = $this->Student_model->get_all_students();
            
            $data['_view'] = 'assignedcourse/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a assignedcourse
     */
    function edit($courseAssignedID)
    {   
        // check if the assignedcourse exists before trying to edit it
        $data['assignedcourse'] = $this->Assignedcourse_model->get_assignedcourse($courseAssignedID);
        
        if(isset($data['assignedcourse']['courseAssignedID']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'courseID' => $this->input->post('courseID'),
					'studentID' => $this->input->post('studentID'),
					'timestamp' => $this->input->post('timestamp'),
                );

                $this->Assignedcourse_model->update_assignedcourse($courseAssignedID,$params);            
                redirect('assignedcourse/index');
            }
            else
            {
				$this->load->model('Course_model');
				$data['all_courses'] = $this->Course_model->get_all_courses();

				$this->load->model('Student_model');
				$data['all_students'] = $this->Student_model->get_all_students();

                $data['_view'] = 'assignedcourse/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The assignedcourse you are trying to edit does not exist.');
    } 

    /*
     * Deleting assignedcourse
     */
    function remove($courseAssignedID)
    {
        $assignedcourse = $this->Assignedcourse_model->get_assignedcourse($courseAssignedID);

        // check if the assignedcourse exists before trying to delete it
        if(isset($assignedcourse['courseAssignedID']))
        {
            $this->Assignedcourse_model->delete_assignedcourse($courseAssignedID);
            redirect('assignedcourse/index');
        }
        else
            show_error('The assignedcourse you are trying to delete does not exist.');
    }
    public function count_notice(){
        $data['notice'] = $this->Notification_model->get_all_notification_count();
        $this->load->view('header_footer/header_admin',$data);
        $this->load->view('header_footer/footer_admin');
    }


    
}
