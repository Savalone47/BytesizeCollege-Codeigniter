<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Examanswer extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model(['Examanswer_model','Module_model','Notification_model']);
    } 

    /*
     * Listing of examanswer
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('examanswer/index?');
        $config['total_rows'] = $this->Examanswer_model->get_all_examanswer_count();
        $this->pagination->initialize($config);

        $data['examanswer'] = $this->Examanswer_model->get_all_examanswer($params);
        
        $data['_view'] = 'examanswer/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new examanswer
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('moduleID','module','required');
		$this->form_validation->set_rules('examName','ExamName','required');
		
		if($this->form_validation->run())     
        {   
            
            $config['upload_path']= './uploads/campus/';
            $config['allowed_types']= 'pdf';
            $new_file=uniqid('campus');
            $config['file_name'] = $new_file.".pdf";

            $this->load->library('upload', $config);


            if ( ! $this->upload->do_upload('answer'))
            {
                $error = array('error' => $this->upload->display_errors());
                $this->session->set_flashdata(['error'=>$error['error']]);
                redirect($_SERVER['HTTP_REFERER']); 
            }
            else{

                $params = array(
                    'moduleID' => $this->input->post('moduleID'),
                    'answer' => '/uploads/campus/'. $config['file_name'],
                    'activeStatus' => '0',
                    'time_stamp' => date('Y-m-d H:i'),
                    'examName' => $this->input->post('examName'),
                );
                
                $examanswer_id = $this->Examanswer_model->add_examanswer($params);
                $this->session->set_flashdata(['sucess'=>true]);
                redirect($_SERVER['HTTP_REFERER']);
            }
            
        }
        else
        {            
            redirect($_SERVER['HTTP_REFERER']);
        }
    }  

    /*
     * Editing a examanswer
     */
    function edit($answerID)
    {   
        // check if the examanswer exists before trying to edit it
        $data['examanswer'] = $this->Examanswer_model->get_examanswer($answerID);
        
        if(isset($data['examanswer']['answerID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('answer','Answer','required');
			$this->form_validation->set_rules('activeStatus','ActiveStatus','required');
			$this->form_validation->set_rules('examName','ExamName','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'moduleID' => $this->input->post('moduleID'),
					'answer' => $this->input->post('answer'),
					'activeStatus' => $this->input->post('activeStatus'),
					'time_stamp' => $this->input->post('time_stamp'),
					'examName' => $this->input->post('examName'),
                );

                $this->Examanswer_model->update_examanswer($answerID,$params);            
                redirect('examanswer/index');
            }
            else
            {
                $data['_view'] = 'examanswer/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The examanswer you are trying to edit does not exist.');
    } 

    /*
     * Deleting examanswer
     */
    function remove($answerID)
    {
        $examanswer = $this->Examanswer_model->get_examanswer($answerID);

        // check if the examanswer exists before trying to delete it
        if(isset($examanswer['answerID']))
        {
            $this->Examanswer_model->delete_examanswer($answerID);
            redirect('examanswer/index');
        }
        else
            show_error('The examanswer you are trying to delete does not exist.');
    }

}
