<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Exam extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model(['Exam_model','Module_model','Notification_model']);
    } 

    /*
     * Listing of exam
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('exam/index?');
        $config['total_rows'] = $this->Exam_model->get_all_exam_count();
        $this->pagination->initialize($config);

        $data['exam'] = $this->Exam_model->get_all_exam();

        $this->load->view('header_footer/header_admin');
        $this->load->view('exam/index',$data);
        $this->load->view('header_footer/footer_admin');
    }


    function getExamenForStudent($id_module){

        if($this->session->status and $this->session->type_user == 2){

            $data['exam'] = $this->Exam_model->get_Exam_of_user($id_module);
            $this->load->view('header_footer/header_admin');
            $this->load->view('exam/exam_detail',$data);
            $this->load->view('header_footer/footer_admin');
        }
        else{
            redirect($_SERVER['HTTP_REFERER']);
        }
    }


    function detailExamForStudent($id_exam,$id_module){

        if($this->session->status and $this->session->type_user == 2){
            $data['module'] = $id_module;
            $data['exam'] = $this->Exam_model->get_exam($id_exam);
            $this->load->view('header_footer/header_admin');
            $this->load->view('exam/view_exam_detail',$data);
            $this->load->view('header_footer/footer_admin');
        }
        else{

            redirect($_SERVER['HTTP_REFERER']);
        }
    }



    function resultStudent(){

        if($this->session->status and $this->session->type_user == 2){
            
            $this->load->view('header_footer/header_admin');
            $this->load->view('exam/result_all_course');
            $this->load->view('header_footer/footer_admin');
        
        }
        else{

            redirect($_SERVER['HTTP_REFERER']);
        }
    }

    /*
     * Adding a new exam
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('date','Date','required');
		$this->form_validation->set_rules('start','Start','required');
		$this->form_validation->set_rules('end','End','required');
		$this->form_validation->set_rules('title','Title','required');
	
		
		if($this->form_validation->run())     
        {   
            $config['upload_path']= './uploads/campus/';
            $config['allowed_types']= 'pdf|PDF';
            $new_file=uniqid('exam');
            $config['file_name'] = $new_file.".pdf";

            $this->load->library('upload', $config);


            if ( ! $this->upload->do_upload('exam'))
            {
                $error = array('error' => $this->upload->display_errors());
                $this->session->set_flashdata(['error'=>$error['error']]);
                redirect($_SERVER['HTTP_REFERER']); 
            }
            else{
                
                $params = array(
                    'moduleID' => $this->input->post('moduleID'),
                    'date' => $this->input->post('date'),
                    'start' => $this->input->post('start'),
                    'end' => $this->input->post('end'),
                    'title' => $this->input->post('title'),
                    'exam' => '/uploads/campus/'. $config['file_name'],
                    'marks' => '100',
                    'term' => '0',
                    'paper' =>'0',
                    'deleteStatus' => '0',
                    'time_stamp' => date('M-D-Y'),
                );
                
                $exam_id = $this->Exam_model->add_exam($params);
                $this->session->set_flashdata(['success'=>true]);
                redirect($_SERVER['HTTP_REFERER']); 
                
            }
            
        }
        else
        {           
            $data['moduleID_values'] = $this->Module_model->get_all_modules();

            $this->load->view('header_footer/header_admin');
            $this->load->view('exam/add',$data);
            $this->load->view('header_footer/footer_admin');
        }
    }

    /*
     * Adding a new exam
     */

    function addExam($moduleID)
    {
        $this->load->library('form_validation');

        $this->form_validation->set_rules('date','Date','required');
        $this->form_validation->set_rules('start','Start','required');
        $this->form_validation->set_rules('end','End','required');
        $this->form_validation->set_rules('title','Title','required');
        $this->form_validation->set_rules('marks','Marks','required');
        $this->form_validation->set_rules('term','Term','required');

        if($this->form_validation->run())
        {
            $config['upload_path']= './uploads/campus/';
            $config['allowed_types']= 'docx|doc';
            $new_file=uniqid('campus');
            $config['file_name'] = $new_file.".docx";

            $this->load->library('upload', $config);


            if ( ! $this->upload->do_upload('exam'))
            {
                $error = array('error' => $this->upload->display_errors());
                $this->session->set_flashdata(['error'=>$error['error']]);
                redirect($_SERVER['HTTP_REFERER']);
            }
            else{

                $params = array(
                    'moduleID' => $this->input->post('moduleID'),
                    'date' => $this->input->post('date'),
                    'start' => $this->input->post('start'),
                    'end' => $this->input->post('end'),
                    'title' => $this->input->post('title'),
                    'exam' => '/uploads/campus/'. $config['file_name'],
                    'marks' => $this->input->post('marks'),
                    'term' => $this->input->post('term'),
                    'paper' =>'0',
                    'deleteStatus' => '0',
                    'time_stamp' => date('M-D-Y'),
                );

                $exam_id = $this->Exam_model->add_exam($params);
                redirect("learning/get_learning_of_module/$moduleID");

            }

        }
        else
        {
            $data['moduleID'] = $moduleID;

            $this->load->view('header_footer/header_admin');
            $this->load->view('exam/addExam',$data);
            $this->load->view('header_footer/footer_admin');
        }
    }

    /*
     * Editing a exam
     */
    function edit($id)
    {   
        // check if the exam exists before trying to edit it
        $data['exam'] = $this->Exam_model->get_exams($id);
        
        if(isset($data['exam']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('date','Date','required');
			$this->form_validation->set_rules('start','Start','required');
			$this->form_validation->set_rules('end','End','required');
			$this->form_validation->set_rules('title','Title','required');
			$this->form_validation->set_rules('exam','Exam','required');
			$this->form_validation->set_rules('marks','Marks','required');
			$this->form_validation->set_rules('term','Term','required');
			$this->form_validation->set_rules('paper','Paper','required');
		
			if($this->form_validation->run())     
            {   
                $params = [
					'moduleID' => $this->input->post('moduleID'),
					'date' => $this->input->post('date'),
					'start' => $this->input->post('start'),
					'end' => $this->input->post('end'),
					'title' => $this->input->post('title'),
					'exam' => $this->input->post('exam'),
					'marks' => $this->input->post('marks'),
					'term' => $this->input->post('term'),
					'paper' => $this->input->post('paper'),
					'deleteStatus' => $this->input->post('deleteStatus'),
					'time_stamp' => $this->input->post('time_stamp'),
                ];
                $this->Exam_model->update_exam($id,$params);
                $this->session->set_flashdata(['error'=>$error['error']]);
                redirect('exam/index');
            }
            else {
                $this->load->view('header_footer/header_admin');
                $this->load->view('exam/edit', $data);
                $this->load->view('header_footer/footer_admin');
            }
        } else
            show_error('The exam you are trying to edit does not exist.');
    } 

    /*
     * Deleting exam
     */
    function remove($id)
    {
        $exam = $this->Exam_model->get_exams($id);

        // check if the exam exists before trying to delete it
        if(isset($exam['id']))
        {
            $this->Exam_model->delete_exam($id);
            redirect('exam/index');
        }
        else
            show_error('The exam you are trying to delete does not exist.');
    }

    function exam_detail($id){
        $data['exam'] = $this->Exam_model->get_exam($id);

        $this->load->view('header_footer/header_admin');
        $this->load->view('exam/exam_detail', $data);
        $this->load->view('header_footer/footer_admin');
    }
}
