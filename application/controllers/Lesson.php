<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Lesson extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Lesson_model');
    } 

    /*
     * Listing of lessons
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('lesson/index?');
        $config['total_rows'] = $this->Lesson_model->get_all_lessons_count();
        $this->pagination->initialize($config);

        $data['lessons'] = $this->Lesson_model->get_all_lessons($params);
        
        $data['_view'] = 'lesson/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new lesson
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('lessonName','LessonName','required');
		$this->form_validation->set_rules('lessonDescription','LessonDescription','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'tutorID' => $this->input->post('tutorID'),
				'subjectID' => $this->input->post('subjectID'),
				'lessonName' => $this->input->post('lessonName'),
				'weekDay' => $this->input->post('weekDay'),
				'roomID' => $this->input->post('roomID'),
				'roomPin' => $this->input->post('roomPin'),
				'adminPin' => $this->input->post('adminPin'),
				'lecturerRoomID' => $this->input->post('lecturerRoomID'),
				'grade' => $this->input->post('grade'),
				'lessonTime' => $this->input->post('lessonTime'),
				'lessonDate' => $this->input->post('lessonDate'),
				'lessonStart' => $this->input->post('lessonStart'),
				'lessonEnd' => $this->input->post('lessonEnd'),
				'ref' => $this->input->post('ref'),
				'dateEventCreated' => $this->input->post('dateEventCreated'),
				'lessonDescription' => $this->input->post('lessonDescription'),
            );
            
            $lesson_id = $this->Lesson_model->add_lesson($params);
            redirect('lesson/index');
        }
        else
        {
			$this->load->model('User_model');
			$data['all_users'] = $this->User_model->get_all_users();
            
            $data['_view'] = 'lesson/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a lesson
     */
    function edit($lessonID)
    {   
        // check if the lesson exists before trying to edit it
        $data['lesson'] = $this->Lesson_model->get_lesson($lessonID);
        
        if(isset($data['lesson']['lessonID']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('lessonName','LessonName','required');
			$this->form_validation->set_rules('lessonDescription','LessonDescription','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'tutorID' => $this->input->post('tutorID'),
					'subjectID' => $this->input->post('subjectID'),
					'lessonName' => $this->input->post('lessonName'),
					'weekDay' => $this->input->post('weekDay'),
					'roomID' => $this->input->post('roomID'),
					'roomPin' => $this->input->post('roomPin'),
					'adminPin' => $this->input->post('adminPin'),
					'lecturerRoomID' => $this->input->post('lecturerRoomID'),
					'grade' => $this->input->post('grade'),
					'lessonTime' => $this->input->post('lessonTime'),
					'lessonDate' => $this->input->post('lessonDate'),
					'lessonStart' => $this->input->post('lessonStart'),
					'lessonEnd' => $this->input->post('lessonEnd'),
					'ref' => $this->input->post('ref'),
					'dateEventCreated' => $this->input->post('dateEventCreated'),
					'lessonDescription' => $this->input->post('lessonDescription'),
                );

                $this->Lesson_model->update_lesson($lessonID,$params);            
                redirect('lesson/index');
            }
            else
            {
				$this->load->model('User_model');
				$data['all_users'] = $this->User_model->get_all_users();

                $data['_view'] = 'lesson/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The lesson you are trying to edit does not exist.');
    } 

    /*
     * Deleting lesson
     */
    function remove($lessonID)
    {
        $lesson = $this->Lesson_model->get_lesson($lessonID);

        // check if the lesson exists before trying to delete it
        if(isset($lesson['lessonID']))
        {
            $this->Lesson_model->delete_lesson($lessonID);
            redirect('lesson/index');
        }
        else
            show_error('The lesson you are trying to delete does not exist.');
    }
    
}
